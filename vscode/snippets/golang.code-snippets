{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"http.HandlerFunc": {
		"scope": "go",
		"prefix": "fhttp",
		"body": [
			"func $1(w http.ResponseWriter, r *http.Request) {",
			"\t$0",
			"}"
		]
	},
	"forwait": {
		"scope": "go",
		"prefix": "fwg",
		"body": [
			"var (",
			"\tm sync.Mutex",
			"\twg sync.WaitGroup",
			")",
			"",
			"for _, $1 := range $2 {",
			"\twg.Add(1)",
			"\tgo func($1 $3) {",
			"\t\tdefer wg.Done()",
			"\t\t$0",
			"\t}($1)",
			"}",
			"",
			"wg.Wait()",
		],
	},
	"impltypecheck": {
		"scope": "go",
		"prefix": "npi",
		"body": "var _ $1 = (*$2)(nil)$0",
	},
	"testtable.skeleton": {
		"scope": "go",
		"prefix": "ttskel",
		"body": [
			"t.Parallel()",
			"",
			"tests := []struct {",
			"\tname string",
			"}{}",
			"",
			"for _, tt := range tests {",
			"\ttt := tt",
			"",
			"\tt.Run(tt.name, func(t *testing.T) {",
			"\t\tt.Parallel()",
			"\t})",
			"}",
		],
	},
	"vitess.copyright": {
		"scope": "go",
		"body": [
			"/*",
			"Copyright $1 The Vitess Authors.",
			"",
			"Licensed under the Apache License, Version 2.0 (the \"License\");",
			"you may not use this file except in compliance with the License.",
			"You may obtain a copy of the License at",
			"",
			"\thttp://www.apache.org/licenses/LICENSE-2.0",
			"",
			"Unless required by applicable law or agreed to in writing, software",
			"distributed under the License is distributed on an \"AS IS\" BASIS,",
			"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
			"See the License for the specific language governing permissions and",
			"limitations under the License.",
			"*/",
		],
		"description": "Insert Go-formatted copyright notice at cursor position",
	},
	"vitess.pbimport": {
		"scope": "go",
		"prefix": "vpbi",
		"body": "$1pb \"vitess.io/vitess/go/vt/proto/$1\"",
		"description": "Insert a correctly-renamed protobuf import within an existing import block."
	},
}